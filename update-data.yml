name: 自動更新可轉債資料

on:
  push:
    paths:
      - 'cb_issue.xlsx'  # 只要Excel被上傳就自動執行
  workflow_dispatch:  # 也可手動執行

permissions:
  contents: write  # 允許寫入權限

jobs:
  update:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 下載程式碼
      uses: actions/checkout@v3
      
    - name: 🐍 設定Python環境
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: 📦 安裝必要套件
      run: |
        pip install pandas openpyxl
        
    - name: 🔄 轉換Excel為JSON
      run: |
        python3 << 'PYTHON_SCRIPT'
        import pandas as pd
        import json
        from datetime import datetime
        
        print("=" * 60)
        print("開始轉換資料...")
        print("=" * 60)
        
        # 讀取Excel
        df = pd.read_excel('cb_issue.xlsx', sheet_name='allcbissue')
        print(f"✓ 讀取 {len(df)} 筆資料")
        
        # 轉換格式
        data = []
        for _, row in df.iterrows():
            list_date = str(row.get('掛牌日期', ''))
            if 'Timestamp' in list_date or len(list_date) > 10:
                list_date = list_date[:10]
            
            data.append({
                'cbCode': str(row.get('CB代碼', '')).replace('.0', ''),
                'cbName': str(row.get('CB名稱', '')),
                'stockCode': str(row.get('股票代碼', '')),
                'size': float(row.get('發行規模', 0)) if pd.notna(row.get('發行規模')) else 0,
                'guarantee': str(row.get('有無擔保', '')),
                'year': float(row.get('發行年期', 0)) if pd.notna(row.get('發行年期')) else 0,
                'convPrice': float(row.get('轉換價格', 0)) if pd.notna(row.get('轉換價格')) else 0,
                'listDate': list_date,
                'maturity': str(row.get('下市日期', '')),
                'high': float(row.get('掛牌最高', 0)) if pd.notna(row.get('掛牌最高')) else 0,
                'low': float(row.get('掛牌最低', 0)) if pd.notna(row.get('掛牌最低')) else 0,
                'putDate1': str(row.get('賣回日期1', '-')),
                'putPrice1': float(row.get('賣回價格1', 0)) if pd.notna(row.get('賣回價格1')) else 0,
                'rate1': float(row.get('賣回殖利率1', 0)) if pd.notna(row.get('賣回殖利率1')) else 0,
                'putDate2': str(row.get('賣回日期2', '-')),
                'putPrice2': float(row.get('賣回價格2', 0)) if pd.notna(row.get('賣回價格2')) else 0,
                'rate2': float(row.get('賣回殖利率2', 0)) if pd.notna(row.get('賣回殖利率2')) else 0,
                'underwriter': str(row.get('承銷券商', '')),
                'industry': str(row.get('產業分類', '')),
                'method': str(row.get('承銷方式', '')),
                'capital': str(row.get('股本規模', ''))
            })
        
        # 儲存JSON
        with open('cb_data.json', 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False)
        
        print("=" * 60)
        print(f"✅ 轉換完成！")
        print(f"資料筆數: {len(data)}")
        print(f"更新時間: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print("=" * 60)
        PYTHON_SCRIPT
        
    - name: 📤 自動提交更新
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # 檢查是否有變更
        if git diff --quiet cb_data.json; then
          echo "📋 資料無變更，跳過提交"
        else
          git add cb_data.json
          git commit -m "🔄 自動更新資料 $(date +'%Y-%m-%d %H:%M:%S')"
          git push
          echo "✅ 資料已更新並推送"
        fi
